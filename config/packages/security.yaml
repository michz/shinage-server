security:
  password_hashers:
    App\Entity\User: bcrypt

  role_hierarchy:
    ROLE_USER:        ROLE_POOL_USER
    ROLE_ADMIN:       ROLE_USER
    ROLE_SUPER_ADMIN: ROLE_ADMIN

  providers:
    app_user_provider:
      entity:
        class: App\Entity\User
        property: emailCanonical

  firewalls:
    apitoken_secured:
      pattern: ^/api/v1
      stateless: true
      custom_authenticators:
        - App\Security\ApiTokenAuthenticator
    main:
      pattern: ^/
      user_checker: App\Security\UserChecker
      form_login:
        provider: app_user_provider
        login_path: app_manage_login
        check_path: app_manage_login_check
        enable_csrf: true
      logout:
        path: /logout
        target: /login
      two_factor:
        auth_form_path: 2fa_login
        check_path: 2fa_login_check
    #pool:
    #  pattern: ^/pool
    #  form_login:
    #    provider: app_user_provider
    #    check_path: ~
    #    login_path: ~
    #  access_denied_handler: App\Component\Event\AccessDeniedHandler

  access_control:
    - { path: ^/login$, role: PUBLIC_ACCESS }
    - { path: ^/register, role: PUBLIC_ACCESS }
    #- { path: ^/resetting, role: PUBLIC_ACCESS }
    - { path: ^/adm/modify_screen, role: ROLE_USER }
    - { path: ^/adm, role: ROLE_ADMIN }
    #- { path: ^/2fa, role: IS_AUTHENTICATED_2FA_IN_PROGRESS }
    - { path: ^/manage/2fa, role: IS_AUTHENTICATED_2FA_IN_PROGRESS }
    - { path: ^/logout$, role: IS_AUTHENTICATED_2FA_IN_PROGRESS }
    - { path: ^/manage, role: ROLE_USER }
    - { path: ^/pool, role: PUBLIC_ACCESS, methods: [GET] }
